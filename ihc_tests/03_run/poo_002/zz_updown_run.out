
══════════════════════ Running solver against test cases ══════════════════════
=> base:[cases.tio(10)] prog:[draft.ts] [ω ω ω ω ω ω ω ω ω ω]
(ω wrong_out)[00] GR:010 cases.tio (inicializar      ) 
(ω wrong_out)[01] GR:010 cases.tio (entrar           ) 
(ω wrong_out)[02] GR:010 cases.tio (limite           ) 
(ω wrong_out)[03] GR:010 cases.tio (sair             ) 
(ω wrong_out)[04] GR:010 cases.tio (limite saida     ) 
(ω wrong_out)[05] GR:010 cases.tio (abastecer        ) 
(ω wrong_out)[06] GR:010 cases.tio (dirigir vazio    ) 
(ω wrong_out)[07] GR:010 cases.tio (dirigir          ) 
(ω wrong_out)[08] GR:010 cases.tio (para longe       ) 
(ω wrong_out)[09] GR:010 cases.tio (enchendo o tanque) 
╭──────────────────────────────────────────────────────────────────────────────
│           (ω wrong_out)[00] GR:010 cases.tio (inicializar      )             
├─────────────────────────────────── INPUT ────────────────────────────────────
│ show
│ end
├────────────────────────────────── EXPECTED ──────────────────────────────────
│ $show
├ pass: 0, gas: 0, km: 0
│ $end
├────────────────────────────────── RECEIVED ──────────────────────────────────
│ $show
├ pass: 0, gas: 1, km: 0
│ $end
├───────────────────────────────── WHITESPACE ─────────────────────────────────
│ pass:⸱0,⸱gas:⸱0,⸱km:⸱0↵ (expected)
│ pass:⸱0,⸱gas:⸱1,⸱km:⸱0↵ (received)
│               ↑         (mismatch)
╰──────────────────────────────────────────────────────────────────────────────

